Program {
    int prinInt(int a) extern;

    // Función para verificar si un número es primo
    bool esPrimo(int n) {
        int i;
        i = 2;
        if (n < 2) then {
            return false;
        }

        while (i * i < n) {
            if (n % i == 0) then {
                return false;
            }
            i = i+1;
        }
        return true;
    }

    // Función para verificar si un número es perfecto
    bool esPerfecto(int n) {
        int suma;
        int i;
        suma = 0;
        i = 1;
        while (i < n) {
            if (n % i == 0) then {
                suma = suma + i;
            }
            i = i + 1;
        }

        return suma == n;
    }

    // Función para calcular el factorial de un número
    int factorial(int n) {
        int i;
        int resultado;

        if (n == 0) then {
            return 1;
        }

        resultado = 1;
        i = 1;
        while (i < n) {
            resultado = resultado * i;
            i = i + 1;
        }
        return resultado;
    }

    // Función para calcular el n-ésimo término de la secuencia de Fibonacci
    int fibonacci(int n) {
        int a;
        int i;
        int b;
        int c;

        if (n == 0 || n == 1) then {
            return n;
        }

        a = 0;
        b = 1;
        i = 2;
        while (i < n) {
            c = a + b;
            a = b;
            b = c;
            i = i + 1;
        }
        return b;
    }

    // Función principal
    int main() {
        int numero;
        int numero2;
        int numero3;


        numero = 247;
        numero2 = 247;
        numero3 = 247;

        // Verificar si el número es primo
        if (esPrimo(numero)) then {
            prinInt(numero);
        }

        // Verificar si el número es perfecto
        if (esPerfecto(numero)) then {
            prinInt(numero);
        }
        // Calcular el factorial del número
        prinInt(factorial(numero));

        // Calcular el término de Fibonacci
        prinInt(fibonacci(10));

        return 0;
    }

}
