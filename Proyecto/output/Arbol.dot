digraph{

rankdir=TB;

node[shape=box];
"103|  PROGRAM" -> "5|  DECLARACION", "102|  PROGRAM_BLOCK";
"5|  DECLARACION" -> "2|  DECLARACION", "4|  z";
"2|  DECLARACION" -> "1|  x" ;
"102|  PROGRAM_BLOCK" -> "55|  LIS_FUNCION", "101|  main";
"55|  LIS_FUNCION" -> "26|  LIS_FUNCION", "54|  get_bool";
"26|  LIS_FUNCION" -> "10|  LIS_FUNCION", "25|  get_num";
"10|  LIS_FUNCION" -> "9|  prinInt" ;
"9|  prinInt" -> "8|  c" ;
"25|  get_num" -> "13|  x", "24|  BLOCK";
"24|  BLOCK" -> "23|  BLOCK_INTERNO", "22|  BLOCK_FIN";
"23|  BLOCK_INTERNO" -> "16|  DECLARACION", "21|  SENTENCIA";
"16|  DECLARACION" -> "15|  z" ;
"21|  SENTENCIA" -> "20|  return" ;
"20|  return" -> "19|  +" ;
"19|  +" -> "17|  z", "18|  x";
"54|  get_bool" -> "38|  PARAMETROS", "53|  BLOCK";
"38|  PARAMETROS" -> "29|  r", "37|  PARAMETROS";
"37|  PARAMETROS" -> "31|  t", "36|  PARAMETROS";
"36|  PARAMETROS" -> "33|  y", "35|  z";
"53|  BLOCK" -> "51|  SENTENCIA", "52|  BLOCK_FIN";
"51|  SENTENCIA" -> "48|  SENTENCIA", "50|  return";
"48|  SENTENCIA" -> "43|  SENTENCIA", "47|  asignacion";
"43|  SENTENCIA" -> "42|  asignacion" ;
"42|  asignacion" -> "41|  x", "40|  true";
"47|  asignacion" -> "46|  x", "45|  false";
"50|  return" -> "49|  1" ;
"101|  main" -> "100|  BLOCK" ;
"100|  BLOCK" -> "99|  BLOCK_INTERNO", "98|  BLOCK_FIN";
"99|  BLOCK_INTERNO" -> "61|  DECLARACION", "97|  SENTENCIA";
"61|  DECLARACION" -> "58|  DECLARACION", "60|  x";
"58|  DECLARACION" -> "57|  c" ;
"97|  SENTENCIA" -> "94|  SENTENCIA", "96|  return";
"94|  SENTENCIA" -> "71|  SENTENCIA", "93|  while";
"71|  SENTENCIA" -> "66|  SENTENCIA", "70|  asignacion";
"66|  SENTENCIA" -> "65|  asignacion" ;
"65|  asignacion" -> "64|  c", "63|  10";
"70|  asignacion" -> "69|  x", "68|  -5";
"93|  while" -> "78|  &&", "92|  BLOCK";
"78|  &&" -> "74|  <", "77|  ==";
"74|  <" -> "72|  x", "73|  10";
"77|  ==" -> "75|  c", "76|  10";
"92|  BLOCK" -> "90|  SENTENCIA", "91|  BLOCK_FIN";
"90|  SENTENCIA" -> "83|  SENTENCIA", "89|  asignacion";
"83|  SENTENCIA" -> "82|  LLAMADA_FUNC" ;
"82|  LLAMADA_FUNC" -> "81|  prinInt", "80|  x";
"89|  asignacion" -> "88|  x", "87|  +";
"87|  +" -> "85|  x", "86|  1";
"96|  return" -> "95|  0" ;
}
